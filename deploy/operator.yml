apiVersion: v1
kind: Template
metadata:
  name: xjoin-operator
parameters:
  - name: IMAGE_TAG
    value: latest
  - name: IMAGE
    value: quay.io/cloudservices/xjoin-operator-index
  - name: TARGET_NAMESPACE
    value: xjoin
  - name: RECONCILE_INTERVAL
    value: "120"
  - name: VALIDATION_INTERVAL
    value: "600"
  - name: VALIDATION_INTERVAL_INIT
    value: "120"
  - name: VALIDATION_PERCENTAGE_THRESHOLD
    value: "5"
  - name: VALIDATION_PERCENTAGE_THRESHOLD_INIT
    value: "5"
  - name: VALIDATION_ATTEMPTS_THRESHOLD
    value: "10"
  - name: VALIDATION_ATTEMPTS_THRESHOLD_INIT
    value: "60"
  - name: CONNECT_CLUSTER
    value: "xjoin-kafka-connect-strimzi"
  - name: ES_CONNECTOR_TASKS_MAX
    value: "50"
  - name: JENKINS_MANAGED_VERSION
    value: "v1.0"
  - name: KAFKA_TOPIC_PARTITIONS
    value: "500"
  - name: KAFKA_TOPIC_REPLICAS
    value: "2"
  - name: ES_CONNECTOR_MAX_IN_FLIGHT_REQUESTS
    value: "1"
  - name: ES_CONNECTOR_MAX_RETRIES
    value: "8"
  - name: ES_CONNECTOR_RETRY_BACKOFF_MS
    value: "100"
  - name: ES_CONNECTOR_BATCH_SIZE
    value: "100"
  - name: ES_CONNECTOR_MAX_BUFFERED_RECORDS
    value: "500"
  - name: ES_CONNECTOR_LINGER_MS
    value: "100"
  - name: ES_INDEX_REPLICAS
    value: "1"
  - name: ES_INDEX_SHARDS
    value: "3"
  - name: DEBEZIUM_CONNECTOR_TASKS_MAX
    value: "1"
  - name: DEBEZIUM_CONNECTOR_MAX_BATCH_SIZE
    value: "10"
  - name: DEBEZIUM_CONNECTOR_MAX_QUEUE_SIZE
    value: "1000"
  - name: DEBEZIUM_CONNECTOR_POLL_INTERVAL_MS
    value: "100"
  - name: HBI_DB_SSL
    value: "disable"
  - name: LOG_LEVEL
    value: "info"
  - name: KAFKA_TOPIC_RETENTION_BYTES
    value: "256000000"
  - name: FULL_VALIDATION_NUM_THREADS
    value: "10"
  - name: FULL_VALIDATION_CHUNK_SIZE
    value: "500"
  - name: MANAGER_POD_CPU_REQUESTS
    value: "250m"
  - name: MANAGER_POD_MEM_REQUESTS
    value: "512Mi"
  - name: MANAGER_POD_CPU_LIMIT
    value: "4"
  - name: MANAGER_POD_MEM_LIMIT
    value: "8Gi"

objects:
  - apiVersion: operators.coreos.com/v1
    kind: OperatorGroup
    metadata:
      name: xjoin-operator-group
    spec:
      targetNamespaces:
        - ${TARGET_NAMESPACE}

  - apiVersion: operators.coreos.com/v1alpha1
    kind: CatalogSource
    metadata:
      name: xjoin-operator-source
    spec:
      sourceType: grpc
      image: ${IMAGE}:${IMAGE_TAG}

  - apiVersion: operators.coreos.com/v1alpha1
    kind: Subscription
    metadata:
      name: xjoin-subscription
    spec:
      channel: alpha
      name: xjoin-operator
      source: xjoin-operator-source
      sourceNamespace: ${TARGET_NAMESPACE}
      config:
        env:
          - name: LOG_LEVEL
            value: "${LOG_LEVEL}"
        resources:
          limits:
            cpu: ${MANAGER_POD_CPU_LIMIT}
            memory: ${MANAGER_POD_MEM_LIMIT}
          requests:
            cpu: ${MANAGER_POD_CPU_REQUESTS}
            memory: ${MANAGER_POD_MEM_REQUESTS}

  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: xjoin
    data:
      standard.interval: ${RECONCILE_INTERVAL}
      validation.interval: ${VALIDATION_INTERVAL}
      validation.attempts.threshold: ${VALIDATION_ATTEMPTS_THRESHOLD}
      validation.percentage.threshold: ${VALIDATION_PERCENTAGE_THRESHOLD}
      init.validation.interval: ${VALIDATION_INTERVAL_INIT}
      init.validation.attempts.threshold: ${VALIDATION_ATTEMPTS_THRESHOLD_INIT}
      init.validation.percentage.threshold: ${VALIDATION_PERCENTAGE_THRESHOLD_INIT}
      connect.cluster: ${CONNECT_CLUSTER}
      elasticsearch.connector.tasks.max: ${ES_CONNECTOR_TASKS_MAX}
      elasticsearch.connector.max.in.flight.requests: ${ES_CONNECTOR_MAX_IN_FLIGHT_REQUESTS}
      elasticsearch.connector.max.retries: ${ES_CONNECTOR_MAX_RETRIES}
      elasticsearch.connector.retry.backoff.ms: ${ES_CONNECTOR_RETRY_BACKOFF_MS}
      elasticsearch.connector.batch.size: ${ES_CONNECTOR_BATCH_SIZE}
      elasticsearch.connector.max.buffered.records: ${ES_CONNECTOR_MAX_BUFFERED_RECORDS}
      elasticsearch.connector.linger.ms: ${ES_CONNECTOR_LINGER_MS}
      elasticsearch.index.replicas: ${ES_INDEX_REPLICAS}
      elasticsearch.index.shards: ${ES_INDEX_SHARDS}
      debezium.connector.tasks.max: ${DEBEZIUM_CONNECTOR_TASKS_MAX}
      debezium.connector.max.batch.size: ${DEBEZIUM_CONNECTOR_MAX_BATCH_SIZE}
      debezium.connector.max.queue.size: ${DEBEZIUM_CONNECTOR_MAX_QUEUE_SIZE}
      debezium.connector.poll.interval.ms: ${DEBEZIUM_CONNECTOR_POLL_INTERVAL_MS}
      kafka.topic.partitions: ${KAFKA_TOPIC_PARTITIONS}
      kafka.topic.replicas: ${KAFKA_TOPIC_REPLICAS}
      jenkins.managed.version: ${JENKINS_MANAGED_VERSION}
      hbi.db.ssl: ${HBI_DB_SSL}
      kafka.topic.retention.bytes: ${KAFKA_TOPIC_RETENTION_BYTES}
      full.validation.num.threads: ${FULL_VALIDATION_NUM_THREADS}
      full.validation.chunk.size: ${FULL_VALIDATION_CHUNK_SIZE}
      elasticsearch.index.template: >-
        {
          "settings": {
            "index": {
              "number_of_shards": "{{.ElasticSearchIndexShards}}",
              "number_of_replicas": "{{.ElasticSearchIndexReplicas}}",
              "default_pipeline": "{{.ElasticSearchPipeline}}",
              "max_result_window": 50000
            },
            "analysis": {
              "normalizer": {
                "case_insensitive": {
                  "filter": "lowercase"
                }
              }
            }
          },
          "mappings": {
            "dynamic": false,
            "properties": {
              "ingest_timestamp": {"type": "date"},
              "id": { "type": "keyword" },
              "account": { "type": "keyword" },
              "display_name": {
                "type": "keyword",
                "fields": {
                  "lowercase": {
                    "type": "keyword",
                    "normalizer": "case_insensitive"
                  }
                }
              },
              "created_on": { "type": "date_nanos" },
              "modified_on": { "type": "date_nanos" },
              "stale_timestamp": { "type": "date_nanos" },
              "ansible_host": { "type": "keyword" },
              "canonical_facts": {
                "type": "object",
                "properties": {
                  "fqdn": { "type": "keyword"},
                  "insights_id": { "type": "keyword"},
                  "satellite_id": { "type": "keyword"},
                  "provider_type": { "type": "keyword"},
                  "provider_id": { "type": "keyword"}
                }
              },
              "system_profile_facts": {
                "type": "object",
                "properties": {
                  "arch": { "type": "keyword" },
                  "os_release": { "type": "keyword" },
                  "os_kernel_version": { "type": "keyword"},
                  "infrastructure_type": { "type": "keyword" },
                  "infrastructure_vendor": { "type": "keyword" },
                  "sap_system": { "type": "boolean" },
                  "sap_sids": { "type": "keyword" },
                  "owner_id": { "type": "keyword"},
                  "insights_client_version": { "type": "keyword" },
                  "rhc_client_id": { "type": "keyword" },
                  "is_marketplace": { "type": "boolean" },
                  "operating_system": {
                    "type": "object",
                    "properties": {
                      "major": {"type": "byte"},
                      "minor": {"type": "byte"},
                      "name": {"type": "keyword"}
                    }
                  },
                  "host_type": { "type": "keyword" }
                }
              },
              "tags_structured": {
                "type": "nested",
                "properties": {
                  "namespace": {
                    "type": "keyword",
                    "null_value": "$$_XJOIN_SEARCH_NULL_VALUE"
                  },
                  "key": { "type": "keyword" },
                  "value": {
                    "type": "keyword",
                    "null_value": "$$_XJOIN_SEARCH_NULL_VALUE"
                  }
                }
              },
              "tags_string": {
                "type": "keyword"
              },
              "tags_search": {
                "type": "keyword"
              }
            }
          }}

  # TODO: move this into the bundle itself
  # depends on https://github.com/operator-framework/operator-sdk/pull/4137
  - apiVersion: v1
    kind: Service
    metadata:
      name: xjoin-operator
      labels:
        control-plane: controller-manager
    spec:
      ports:
        - name: https
          protocol: TCP
          port: 8080
          targetPort: 8080
      selector:
        control-plane: controller-manager
